[tox]
envlist = docker

[testenv:docker]
whitelist_externals=docker
deps =
usedevelop = false
depends =
skip_install = true
commands =
    docker build --build-arg PYTHON_VERSION=3.7 -t balrogscript-{envname}-py37-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v balrogscript-{envname}-py37-tox:/app/.tox balrogscript-{envname}-py37-test check,py37
    docker build --build-arg PYTHON_VERSION=3.8 -t balrogscript-{envname}-py38-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v balrogscript-{envname}-py38-tox:/app/.tox balrogscript-{envname}-py38-test py38

[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE=1
usedevelop = true
deps =
  py38: -rrequirements/test.txt
  py37: -rrequirements/test.py37.txt
  check: -rrequirements/test.txt
commands=
    {posargs:py.test --cov-config=tox.ini --cov-append --cov={toxinidir}/src/balrogscript --cov-report term-missing tests}

[testenv:clean]
skip_install = true
commands = coverage erase
depends =

[testenv:report]
skip_install = true
commands = coverage report -m
depends = py38
parallel_show_output = true

[testenv:check]
skip_install = true
ignore_errors = true
commands =
    black --diff --check {toxinidir}
    isort --check -rc -df {toxinidir}
    pip-compile-multi verify
    flake8 {toxinidir}
# Doesn't work without a .git in the same directory
#    check-manifest -v {toxinidir}

[testenv:coveralls]
deps=
    python-coveralls
    coverage
commands=
    coveralls

[flake8]
max-line-length = 160
exclude = .ropeproject,.tox,sandbox
show-source = True

[pytest]
norecursedirs = .tox .git .hg sandbox
python_files = test_*.py
addopts = -vv -s --color=yes

[coverage:run]
branch = true
